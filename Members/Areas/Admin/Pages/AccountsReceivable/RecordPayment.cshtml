@page "{userId?}"
@model Members.Areas.Admin.Pages.AccountsReceivable.RecordPaymentModel
@{
    ViewData["Title"] = "Record New Payment";
    Layout = "/Views/Shared/_Layout.cshtml"; // Ensure this path is correct
}

@if (TempData["StatusMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @Html.Raw(TempData["StatusMessage"]?.ToString()?.Replace("\n", "<br />"))
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["PaymentNotification"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        <strong>Payment Information:</strong><br />
        @Html.Raw(TempData["PaymentNotification"]?.ToString()?.Replace("\n", "<br />"))
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="my-4 p-0">   

    <div class="row justify-content-center m-0 p-0">
        <div class="col-md-8 col-lg-7 p-0">

            <div class="card p-2 shadow">

                <form method="post">

                    <div class="card-header rounded-top shadow">
                        <h4 class="text-center text-black mb-0">@ViewData["Title"]</h4>                                          
                    </div>
                
                    <div class="card-body p-2">
                        
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        @if (Model.IsUserPreselected)
                        {
                            <input type="hidden" asp-for="Input.SelectedUserID" />
                            <div class="mb-3">
                                <label class="form-label fw-bold text-warning fs-5">
                                    <i class="bi bi-person-circle text-warning"></i> Member
                                </label>
                                <p class="form-control shadow border-warning border-2 fs-5 fw-semibold text-center" 
                                   style="background-color: #fffbf0; padding: 12px;">@Model.TargetUserName</p>
                            </div>

                            @* Account Balance Summary *@
                            <div class="card bg-light mb-3">
                                <div class="card-body">
                                    <h6 class="card-title mb-3">Account Summary</h6>
                                    <div class="row">
                                        <div class="col-sm-4 text-center">
                                            <div class="fs-4 fw-bold text-danger">@Model.TotalDue.ToString("C")</div>
                                            <small class="text-muted">Total Due</small>
                                        </div>
                                        <div class="col-sm-4 text-center">
                                            <div class="fs-4 fw-bold text-success">@Model.TotalAvailableUserCreditAmount.ToString("C")</div>
                                            <small class="text-muted">Available Credits</small>
                                        </div>
                                        <div class="col-sm-4 text-center">
                                            @{
                                                var netDue = Model.TotalDue - Model.TotalAvailableUserCreditAmount;
                                            }
                                            <div class="fs-4 fw-bold @(netDue > 0 ? "text-danger" : "text-success")">
                                                @Math.Abs(netDue).ToString("C")
                                            </div>
                                            <small class="text-muted">@(netDue > 0 ? "Net Amount Due" : "Net Credit")</small>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @* Simplified payment process - auto-selects oldest invoice *@
                            <div class="mb-3">
                                @if (Model.OpenInvoicesForUser != null && Model.OpenInvoicesForUser.Any())
                                {
                                    <div class="alert alert-info">
                                        <strong>Payment will be automatically applied to the oldest invoice first.</strong>
                                        @if (Model.OpenInvoicesForUser.Count > 1)
                                        {
                                            <br />
                                            <text>If payment amount exceeds the oldest invoice balance, remaining funds will automatically be applied to other open invoices.</text>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-warning">No open invoices found for this member.</div>
                                }
                            </div>
                        }
                        else // User not preselected, show dropdown (fallback)
                        {
                            <div class="mb-3">
                                <label asp-for="Input.SelectedUserID" class="form-label"></label>
                                <select asp-for="Input.SelectedUserID" asp-items="Model.UserSelectList" class="form-select shadow">
                                    <option value="">-- Select User --</option>
                                </select>
                                <span asp-validation-for="Input.SelectedUserID" class="text-danger"></span>
                            </div>
                            <p class="form-text">Select a user to see their open invoices.</p>
                        }

                        @if (!string.IsNullOrEmpty(Model.ReturnUrl))
                        {
                            <input type="hidden" asp-for="ReturnUrl" />
                        }
                                                
                        @if (!string.IsNullOrEmpty(Model.Input.SelectedUserID)) 
                        {
                            <!-- Payment Amount and Date fields -->
                            <div class="row gy-3 mb-3">

                                <!-- Payment Amount - First and Prominent -->
                                <div class="col-sm-6">
                                    <label asp-for="Input.Amount" class="form-label fw-bold text-success fs-5">
                                        <i class="bi bi-currency-dollar text-success"></i> @Html.DisplayNameFor(m => m.Input.Amount)
                                    </label>
                                    <input asp-for="Input.Amount" type="text" class="form-control shadow border-success border-2 fs-4 text-center fw-bold" 
                                           id="paymentAmountInput"
                                           style="background-color: #f0f9ff;" 
                                           placeholder="0.00" 
                                           oninput="cleanCurrencyInputOnTheFly(this)" 
                                           onblur="formatCurrencyInputOnBlur(this)" />
                                    <span asp-validation-for="Input.Amount" class="text-danger"></span>
                                    
                                    @if (Model.TotalDue > 0)
                                    {
                                        <div class="mt-2 d-flex gap-2 justify-content-center">
                                            <button type="button" class="btn btn-sm btn-outline-primary" onclick="setPaymentAmount(@Model.TotalDue)">
                                                Pay Full Balance (@Model.TotalDue.ToString("C"))
                                            </button>
                                            @if (Model.OpenInvoicesForUser != null && Model.OpenInvoicesForUser.Any())
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="setPaymentAmount(@Model.OpenInvoicesForUser.First().AmountRemaining)">
                                                    Pay Oldest Invoice (@Model.OpenInvoicesForUser.First().AmountRemaining.ToString("C"))
                                                </button>
                                            }
                                        </div>
                                    }
                                </div>

                                <!-- Payment Date -->
                                <div class="col-sm-6">
                                    <label asp-for="Input.PaymentDate" class="form-label fw-bold text-primary fs-6">
                                        <i class="bi bi-calendar-date text-primary"></i> @Html.DisplayNameFor(m => m.Input.PaymentDate)
                                    </label>
                                    <input asp-for="Input.PaymentDate" class="form-control shadow border-primary border-2 fs-5" 
                                           style="background-color: #f8f9ff;" />
                                    <span asp-validation-for="Input.PaymentDate" class="text-danger"></span>
                                </div>

                            </div>
                            
                            <div class="mb-3">
                                <label asp-for="Input.Method" class="form-label fw-bold text-info fs-6">
                                    <i class="bi bi-credit-card text-info"></i> @Html.DisplayNameFor(m => m.Input.Method)
                                </label>
                                <select asp-for="Input.Method" asp-items="Html.GetEnumSelectList<Members.Models.PaymentMethod>()" 
                                        class="shadow form-select border-info border-2 fs-5" 
                                        style="background-color: #f0feff;">
                                </select>
                                <span asp-validation-for="Input.Method" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.ReferenceNumber" class="form-label fw-bold text-secondary fs-6">
                                    <i class="bi bi-hash text-secondary"></i> @Html.DisplayNameFor(m => m.Input.ReferenceNumber)
                                </label>
                                <input asp-for="Input.ReferenceNumber" class="form-control shadow border-secondary border-2 fs-5" 
                                       style="background-color: #fafafa;" 
                                       placeholder="Optional" />
                                <span asp-validation-for="Input.ReferenceNumber" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Input.Notes" class="form-label fw-bold text-dark fs-6">
                                    <i class="bi bi-journal-text text-dark"></i> @Html.DisplayNameFor(m => m.Input.Notes)
                                </label>
                                <textarea asp-for="Input.Notes" class="form-control shadow border-dark border-2 fs-6" 
                                          rows="4" 
                                          style="background-color: #f9f9f9;" 
                                          placeholder="Optional notes about this payment..."></textarea>
                                <span asp-validation-for="Input.Notes" class="text-danger"></span>
                            </div>
                            
                        }
                        
                            </div>

                    <div class="card-footer rounded-bottom d-grid py-4 gap-2">
                        <div class="row gy-2 justify-content-center">

                            <div class="col-6 mb-2 text-center">
                                @if (Model.IsUserPreselected && !string.IsNullOrEmpty(Model.ReturnUrl))
                                {
                                    <a href="@Model.ReturnUrl" class="btn btn-sm btn-back mt-0 shadow"><i class="bi bi-arrow-left"> </i> Billing History</a>
                                }
                                else
                                {
                                    <a href="~/Info/" class="btn btn-sm btn-back mt-0 shadow"> <i class="bi bi-arrow-left"></i> Cancel</a>
                                }
                            </div>

                            <div class="col-6 mb-2 text-center">
                                <button type="submit" class="px-3 btn btn-lg btn-success rounded-3 shadow-lg fs-4 fw-bold">
                                    <i class="bi bi-cash-coin me-2"></i> Process Payment
                                </button>
                            </div>


                        </div>
                    </div>
                
                </form>
                
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        function setPaymentAmount(amount) {
            var input = document.getElementById('paymentAmountInput');
            if (input) {
                input.value = amount.toFixed(2);
                // Trigger any validation or formatting
                if (typeof cleanCurrencyInputOnTheFly === 'function') {
                    cleanCurrencyInputOnTheFly(input);
                }
            }
        }
    </script>
}