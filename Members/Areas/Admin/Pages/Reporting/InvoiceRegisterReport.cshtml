@page
@model Members.Areas.Admin.Pages.Reporting.InvoiceRegisterReportModel
@{
    ViewData["Title"] = "Invoice Register Report";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<!-- Top Button placed here -->
<button onclick="topFunction()" id="top-button" title="Go to top">Top</button>

<div class="mx-2 my-4 p-1">
    <div class="row">
        <div class="col">
            <h2 class="text-blackish">@ViewData["Title"]</h2>
            <hr />
        </div>
    </div>

    <form method="get" class="mb-3">
        <div class="row align-items-end gy-2">
            <div class="col-md-3">
                <label for="StartDate" class="ms-2 form-label text-blackish">Start Date:</label>
                <input asp-for="StartDate" type="date" class="form-control shadow" id="StartDate" name="StartDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-3">
                <label for="EndDate" class="ms-2 form-label text-blackish">End Date:</label>
                <input asp-for="EndDate" type="date" class="form-control shadow" id="EndDate" name="EndDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
            </div>

            <div class="col-md-auto">
                <button type="submit" class="btn btn-success rounded-4 mx-2 shadow"><i class="bi bi-funnel-fill"></i> Run Report</button>
            </div>
            @if (Model.ReportData.Any())
            {
                <div class="col-md-auto">
                    <button type="button" class="btn btn-success rounded-4 mx-2 shadow"
                            data-bs-toggle="modal" data-bs-target="#exportInvoiceRegisterConfirmModal">
                        <i class="bi bi-file-earmark-spreadsheet-fill"></i> Export to CSV
                    </button>
                </div>

                <!-- Print Button (Only show if there is report data) -->
                <div class="col-md-auto">
                    <button type="button" class="btn btn-success rounded-4 mx-2 shadow" id="printReportButton">
                        <i class="bi bi-printer-fill"></i> Print
                    </button>
                </div>
            }
        </div>
    </form>

    <!-- Export Confirmation Modal -->
    <div class="modal fade" id="exportInvoiceRegisterConfirmModal" tabindex="-1" aria-labelledby="exportInvoiceRegisterConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content bg-Card-Modal">
                <div class="modal-header">
                    <h5 class="modal-title text-blackish" id="exportInvoiceRegisterConfirmModalLabel">Confirm Export</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-blackish">
                    Are you sure you want to export the Invoice Register to CSV?
                    The report will be generated for the period:
                    <strong>@Model.StartDate.ToString("yyyy-MM-dd")</strong> to <strong>@Model.EndDate.ToString("yyyy-MM-dd")</strong>.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary rounded-4 shadow" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" id="confirmExportInvoiceRegisterBtn" class="btn btn-success rounded-4 shadow"><i class="bi bi-file-earmark-spreadsheet-fill"></i> Confirm Export</button>
                </div>
            </div>
        </div>
    </div>

    @if (Model.ReportData.Any())
    {
        <div class="table-responsive rounded shadow">
            <table class="table-striped table-hover table-bordered bg-Card-Stripe mb-0 table">
                <thead class="bg-gold-light text-blackish">
                    <tr>
                        <th>Inv #</th>
                        <th>Customer</th>
                        <th>Inv Date</th>
                        <th>Due Date</th>
                        <th>Description</th>
                        <th>Type</th>
                        <th class="text-end">Amount Due</th>
                        <th class="text-end">Paid</th>
                        <th class="text-end">Remaining</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ReportData)
                    {
                        <tr>
                            <td>INV-@item.InvoiceId.ToString("D5")</td>
                            <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                            <td>@item.InvoiceDate.ToString("yyyy-MM-dd")</td>
                            <td>@item.DueDate.ToString("yyyy-MM-dd")</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td>@Html.DisplayFor(modelItem => item.Type)</td>
                            <td class="text-end">@item.AmountDue.ToString("C")</td>
                            <td class="text-end">@item.AmountPaid.ToString("C")</td>
                            <td class="text-end">@item.AmountRemaining.ToString("C")</td>
                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                        </tr>
                    }
                </tbody>
                <tfoot class="bg-gold-light text-blackish fw-bold">
                    <tr>
                        <td colspan="6" class="text-end">Totals:</td>
                        <td class="text-end">@Model.Totals.TotalAmountDue.ToString("C")</td>
                        <td class="text-end">@Model.Totals.TotalAmountPaid.ToString("C")</td>
                        <td class="text-end">@Model.Totals.TotalAmountRemaining.ToString("C")</td>
                        <td></td>
                    </tr>
                    @if (Model.Totals.TotalLateFeeInvoices > 0)
                    {
                        <tr>
                            <td colspan="6" class="text-end">Total Late Fee Invoices:</td>
                            <td class="text-end">@Model.Totals.TotalLateFeeValue.ToString("C")</td>
                            <td colspan="2">(@Model.Totals.TotalLateFeeInvoices invoices)</td>
                            <td></td>
                        </tr>
                    }
                </tfoot>
            </table>
        </div>
    }
    else if (Request.Query.ContainsKey("StartDate") || Request.Query.ContainsKey("EndDate"))
    {
        <div class="alert alert-info shadow" role="alert">
            No invoice data found for the selected period: @Model.StartDate.ToString("yyyy-MM-dd") to @Model.EndDate.ToString("yyyy-MM-dd").
        </div>
    }
    else
    {
        <div class="alert alert-info shadow" role="alert">
            Please select a date range and run the report.
        </div>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Export to CSV Button Script-->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var exportButton = document.getElementById('confirmExportInvoiceRegisterBtn');
            if (exportButton) {
                exportButton.addEventListener('click', function() {
                    var currentPagePath = window.location.pathname;
                    // console.log('JS Export (InvoiceRegister): Current Page Path: ' + currentPagePath);

                    var handlerQuery = 'handler=ExportToCsv';
                    var baseUrl = currentPagePath + '?' + handlerQuery;
                    // console.log('JS Export (InvoiceRegister): Base URL with handler: ' + baseUrl);

                    var startDateValue = '@Model.StartDate.ToString("yyyy-MM-dd")';
                    var endDateValue = '@Model.EndDate.ToString("yyyy-MM-dd")';
                    var targetUrl = baseUrl + '&StartDate=' + encodeURIComponent(startDateValue) + '&EndDate=' + encodeURIComponent(endDateValue);
                    console.log('JS Export (InvoiceRegister): Navigating to URL: ' + targetUrl);

                    window.location.href = targetUrl;

                    setTimeout(function() {
                        var modalElement = document.getElementById('exportInvoiceRegisterConfirmModal');
                        if (modalElement) {
                            var modalInstance = bootstrap.Modal.getInstance(modalElement);
                            if (modalInstance) {
                                modalInstance.hide();
                            }
                        }
                    }, 500); // 500ms delay
                });
            }
        });
    </script>

    <!-- Print Button Script -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var printButton = document.getElementById('printReportButton');
            if (printButton) {
                printButton.addEventListener('click', function () {
                    window.print();
                });
            }
        });
    </script>

    <!-- Top Button Script -->
    <script>

        //Get the button
        var mybutton = document.getElementById("top-button");

        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 320 || document.documentElement.scrollTop > 320) {
                mybutton.style.display = "block";
            } else {
                mybutton.style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }

    </script>
}
