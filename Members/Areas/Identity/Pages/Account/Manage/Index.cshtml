@page
@model Members.Areas.Identity.Pages.Account.Manage.IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<!-- Profile Form -->
<div class="row justify-content-center">
    <div class="col-12 m-1">
        <div class="card shadow-sm">
            <div class="card-body">
                <form id="profile-form" method="post">

                <!-- UserName -->
                <div class="form-floating mb-3">
                    <input asp-for="Username" class="form-control shadow" disabled placeholder=" " />
                    <label asp-for="Username" class="form-label">Username</label>
                </div>

                <!-- Phone Row -->
                <div class="row gx-1">

                    <!-- Cell Phone -->
                    <div class="col-6 form-floating mb-3">
                        <input asp-for="Input.PhoneNumber" class="form-control shadow" id="phoneNumber" placeholder="Cell Phone" />
                        <label asp-for="Input.PhoneNumber" class="form-label">Cell Phone</label>
                        <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                    </div>

                    <!-- Home Phone -->
                    <div class="col-6 form-floating mb-3">
                        <input asp-for="Input.HomePhoneNumber" class="form-control shadow" id="homephoneNumber" placeholder="Home Phone" />
                        <label asp-for="Input.HomePhoneNumber" class="form-label">Home Phone (Opt.)</label>
                        <span asp-validation-for="Input.HomePhoneNumber" class="text-danger"></span>
                    </div>

                </div>

                <!-- Names First, Middle, Last -->
                <div class="row gx-1">

                    <!-- FistName-->
                    <div class="col-5 form-floating mb-2">
                        <input asp-for="Input.FirstName" class="form-control shadow" placeholder=" " />
                        <label asp-for="Input.FirstName" class="form-label">First Name</label>
                        <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                    </div>

                    <!-- MiddleName -->
                    <div class="col-2 form-floating mb-3">
                        <div class="form-floating mb-2">
                            <input asp-for="Input.MiddleName" class="form-control shadow" placeholder=" " />
                            <!-- <label asp-for="Input.MiddleName" class="form-label"></label> -->
                            <span asp-validation-for="Input.MiddleName" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- LastName -->
                    <div class="col-5 form-floating mb-2">
                        <input asp-for="Input.LastName" class="form-control shadow" placeholder=" " />
                        <label asp-for="Input.LastName" class="form-label">Last Name</label>
                        <span asp-validation-for="Input.LastName" class="text-danger"></span>
                    </div>

                </div>

                <!-- Dates Birthday and Anniversary -->
                <div class="row gx-1">

                    <!-- Birthday -->
                    <div class="col-6 form-floating mb-2">
                        <input asp-for="Input.Birthday" class="form-control shadow" type="date" placeholder=" " />
                        <label asp-for="Input.Birthday" class="form-label">Birthday (Opt.)</label>
                        <span asp-validation-for="Input.Birthday" class="text-danger"></span>
                    </div>

                    <!-- Anniversary -->
                    <div class="col-6 form-floating mb-2">
                        <input asp-for="Input.Anniversary" class="form-control shadow" type="date" placeholder=" " />
                        <label asp-for="Input.Anniversary" class="form-label">Anniversary (Opt.)</label>
                        <span asp-validation-for="Input.Anniversary" class="text-danger"></span>
                    </div>

                </div>

                <hr />

                <!-- AddressLine1 -->
                <div class="form-floating mb-3">
                    <input asp-for="Input.AddressLine1" class="form-control shadow" placeholder=" " />
                    <label asp-for="Input.AddressLine1" class="form-label">Address Line 1</label>
                    <span asp-validation-for="Input.AddressLine1" class="text-danger"></span>
                </div>

                <!-- AddressLine2 -->
                <div class="form-floating mb-3">
                    <input asp-for="Input.AddressLine2" class="form-control shadow" placeholder=" " />
                    <label asp-for="Input.AddressLine2" class="form-label">Address Line 2 (Opt.)</label>
                    <span asp-validation-for="Input.AddressLine2" class="text-danger"></span>
                </div>

                <!-- City, State, and ZipCode  Line -->
                <div class="row gx-1">

                    <!-- City -->
                    <div class="col-5 form-floating mb-3">
                        <input asp-for="Input.City" class="form-control shadow" placeholder=" " />
                        <label asp-for="Input.City" class="form-label">City</label>
                        <span asp-validation-for="Input.City" class="text-danger"></span>
                    </div>

                    <!-- State -->
                    <div class="col-3 form-floating mb-3">
                        <input asp-for="Input.State" class="form-control shadow" placeholder=" " />
                        <label asp-for="Input.State" class="form-label">State</label>
                        <span asp-validation-for="Input.State" class="text-danger"></span>
                    </div>

                    <!-- ZipCode -->
                    <div class="col-4 form-floating mb-3">
                        <input asp-for="Input.ZipCode" class="form-control shadow" placeholder=" " />
                        <label asp-for="Input.ZipCode" class="form-label">Zip</label>
                        <span asp-validation-for="Input.ZipCode" class="text-danger"></span>
                    </div>

                </div>

                <div class="text-end">

                    <!-- Cancel Button -->
                    <a href="~/" class="btn btn-sm btn-back rounded-2 me-2 shadow">
                        <i class="bi bi-box-arrow-left"></i> Cancel
                    </a>

                    <!-- Save Button -->
                    <button id="update-profile-button" type="submit" class="btn btn-sm btn-success rounded-2 me-2 shadow">
                        <i class="bi bi-check-lg"></i> Save
                    </button>                  

                </div>

                </form>
            </div>
        </div>
    </div>
</div>

<!-- Validation Summary -->
<div class="row justify-content-center">
    <div class="col-12 m-1">
        <div asp-validation-summary="ModelOnly" class="text-danger mt-3"></div>
        <partial class="mt-3" name="_StatusMessage" for="StatusMessage" />
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const phoneNumberInput = document.getElementById('phoneNumber');
            const homephoneNumberInput = document.getElementById('homephoneNumber');

            // Get references to the input fields for capitalization
            const firstNameInput = document.getElementById('Input_FirstName');
            const middleNameInput = document.getElementById('Input_MiddleName');
            const lastNameInput = document.getElementById('Input_LastName');
            const cityInput = document.getElementById('Input_City');
            const stateInput = document.getElementById('Input_State');

            // Function to format phone number as (XXX) XXX-XXXX
            function formatPhoneNumber(input) {
                const cleaned = ('' + input.value).replace(/\D/g, '');
                let formatted = '';
                if (cleaned.length > 0) {
                    formatted = '(' + cleaned.substring(0, 3);
                    if (cleaned.length > 3) {
                        formatted += ') ' + cleaned.substring(3, 6);
                    }
                    if (cleaned.length > 6) {
                        formatted += '-' + cleaned.substring(6, 10);
                    }
                }
                input.value = formatted;
            }

            // Add event listener to format the Cell Phone number
            if (phoneNumberInput) {
                phoneNumberInput.addEventListener('input', function() {
                    formatPhoneNumber(this);
                });
            }

            // Add event listener to format the Home Phone number
            if (homephoneNumberInput) {
                homephoneNumberInput.addEventListener('input', function() {
                    formatPhoneNumber(this); // Use the existing formatPhoneNumber function
                });
            }

            // Function to capitalize the first letter of a string and keep the rest as typed
            function capitalizeFirstLetterAsTyping(input) {
                if (input.value.length > 0) {
                    input.value = input.value.charAt(0).toUpperCase() + input.value.slice(1);
                }
            }

            // Add event listeners to capitalize the first letter on input
            if (firstNameInput) {
                firstNameInput.addEventListener('input', function() {
                    capitalizeFirstLetterAsTyping(this);
                });
            }

            if (middleNameInput) {
                middleNameInput.addEventListener('input', function() {
                    capitalizeFirstLetterAsTyping(this);
                });
            }

            if (lastNameInput) {
                lastNameInput.addEventListener('input', function() {
                    capitalizeFirstLetterAsTyping(this);
                });
            }

            if (cityInput) {
                cityInput.addEventListener('input', function() {
                    capitalizeFirstLetterAsTyping(this);
                });
            }

            if (stateInput) {
                stateInput.addEventListener('input', function() {
                    capitalizeFirstLetterAsTyping(this);
                });
            }
        });
    </script>
}

