@using Microsoft.AspNetCore.Identity
@using Members.Services
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ITaskManagementService TaskService

@{
    bool shouldShowBanner = false;
    int overdueCount = 0;
    int dueNowCount = 0;

    if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Manager")))
    {
        var userId = UserManager.GetUserId(User);
        if (!string.IsNullOrEmpty(userId))
        {
            shouldShowBanner = await TaskService.ShouldShowTaskReminderAsync(userId);
            if (shouldShowBanner)
            {
                var tasks = await TaskService.GetCurrentTaskStatusAsync();
                overdueCount = tasks.Count(t => t.ComputedStatus == "Overdue");
                dueNowCount = tasks.Count(t => t.ComputedStatus == "Due Now");
            }
        }
    }
}

@if (shouldShowBanner && (overdueCount > 0 || dueNowCount > 0))
{
    <div class="alert alert-warning alert-dismissible fade show mb-0 border-0 rounded-0" role="alert" id="taskReminderBanner">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-auto">
                    <i class="bi bi-exclamation-triangle-fill fs-4"></i>
                </div>
                <div class="col">
                    <h6 class="alert-heading mb-1">
                        <i class="bi bi-list-task"></i> Administrative Tasks Need Attention
                    </h6>
                    <p class="mb-0 small">
                        @if (overdueCount > 0)
                        {
                            <span class="badge bg-danger me-2">@overdueCount Overdue</span>
                        }
                        @if (dueNowCount > 0)
                        {
                            <span class="badge bg-warning text-dark me-2">@dueNowCount Due Now</span>
                        }
                        Please review and complete pending tasks to keep operations running smoothly.
                    </p>
                </div>
                <div class="col-auto">
                    <a href="/Admin/TaskManagement" class="btn btn-warning btn-sm me-2">
                        <i class="bi bi-arrow-right"></i> View Tasks
                    </a>
                </div>
            </div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" onclick="dismissTaskReminder()"></button>
    </div>

    <script>
        function dismissTaskReminder() {
            // Create a form and submit it
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/Admin/Tasks?handler=DismissReminder';

            // Add anti-forgery token if available
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token.value;
                form.appendChild(tokenInput);
            }

            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        }
    </script>
}